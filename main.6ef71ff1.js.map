{"version":3,"sources":["src/js/main.js"],"names":["setAttributes","el","attributeAndValue","Object","entries","forEach","attribute","value","setAttribute","svgNS","gameContainer","document","querySelector","cellWH","gameW","gameH","svg","createElementNS","scoreContainer","scoreCount","direction","bodyCells","createBodyCell","geico","x","y","isGeico","cell","setAttributeNS","classList","add","position","createSvg","viewBox","width","height","append","initialView","gameInterval","setInterval","updatePosition","getXdif","getYdif","snakeHead","length","slice","snakeNeck","console","log","newCell","unshift","setTimeout","remove","innerHTML","Math","floor","random","clearInterval","gameOver","addEventListener","e","directions","ArrowRight","ArrowLeft","ArrowDown","ArrowUp","undefined","key"],"mappings":"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","file":"main.6ef71ff1.js","sourceRoot":"..","sourcesContent":["// import CircularSlider from './CircularSlider'\n\nfunction setAttributes(el, attributeAndValue) {\n  Object.entries(attributeAndValue).forEach(([attribute, value]) => {\n    el.setAttribute(attribute, value)\n  })\n}\nconst svgNS = 'http://www.w3.org/2000/svg'\nconst gameContainer = document.querySelector('.game-container')\nconst cellWH = 25\nconst gameW = 16\nconst gameH = 22\nconst svg = document.createElementNS(svgNS, 'svg')\nconst scoreContainer = document.querySelector('.score')\nlet scoreCount = 0\nlet direction = 1\nlet bodyCells = [createBodyCell(), createBodyCell(1, 0)]\nlet geico = createBodyCell(5, 5, true)\n\nfunction createBodyCell(x = 0, y = 0, isGeico = false) {\n  const cell = document.createElementNS(svgNS, 'rect')\n  cell.setAttributeNS(null, 'x', x * cellWH)\n  cell.setAttributeNS(null, 'y', y * cellWH)\n  cell.setAttributeNS(null, 'height', cellWH)\n  cell.setAttributeNS(null, 'width', cellWH)\n  cell.setAttributeNS(null, 'opacity', 1)\n  cell.setAttributeNS(null, 'fill', isGeico ? 'black' : 'hotpink')\n\n  if (isGeico) {\n    cell.classList.add('geico')\n  }\n\n  cell.position = { x, y }\n\n  return cell\n}\n\nfunction createSvg() {\n  setAttributes(svg, {\n    viewBox: `0 0 ${gameW * cellWH} ${gameH * cellWH}`,\n    width: gameW * cellWH,\n    height: gameH * cellWH,\n  })\n\n  gameContainer.append(svg)\n}\n\ncreateSvg()\ninitialView()\n\nconst gameInterval = setInterval(function () {\n  updatePosition()\n}, 140)\n\nfunction getXdif() {\n  if (direction === 1) {\n    return 1\n  }\n  if (direction === 3) {\n    return -1\n  }\n  return 0\n}\nfunction getYdif() {\n  if (direction === 2) {\n    return 1\n  }\n  if (direction === 4) {\n    return -1\n  }\n  return 0\n}\n\nfunction updatePosition() {\n  bodyCells = [bodyCells[bodyCells.length - 1], ...bodyCells.slice(0, bodyCells.length - 1)]\n\n  const snakeHead = bodyCells[0]\n  const snakeNeck = bodyCells[1] || bodyCells[0]\n\n  snakeHead.position.x = snakeNeck.position.x + getXdif()\n  snakeHead.position.y = snakeNeck.position.y + getYdif()\n\n  console.log(snakeHead.position.x)\n\n  // snakeHead.position.x = (snakeHead.position.x + gameW) % gameW\n  // snakeHead.position.y = (snakeHead.position.y + gameH) % gameH\n\n  if (snakeHead.position.x === geico.position.x && snakeHead.position.y === geico.position.y) {\n    const newCell = createBodyCell(geico.position.x + getXdif(), geico.position.y + getYdif())\n    svg.append(newCell)\n    bodyCells.unshift(newCell)\n    scoreCount += 10\n\n    scoreContainer.classList.add('active')\n\n    setTimeout(() => {\n      scoreContainer.classList.remove('active')\n    }, 300)\n    scoreContainer.innerHTML = `<span>Score: ${scoreCount}</span>`\n\n    geico.position = { x: Math.floor(Math.random(1) * gameW), y: Math.floor(Math.random(1) * gameH) }\n    geico.setAttributeNS(null, 'x', geico.position.x * cellWH)\n    geico.setAttributeNS(null, 'y', geico.position.y * cellWH)\n  }\n\n  if (\n    snakeHead.position.x < 0 ||\n    snakeHead.position.x > gameW - 1 ||\n    snakeHead.position.y < 0 ||\n    snakeHead.position.y > gameH - 1\n  ) {\n    clearInterval(gameInterval)\n    gameOver()\n  } else {\n    snakeHead.setAttributeNS(null, 'x', snakeHead.position.x * cellWH)\n    snakeHead.setAttributeNS(null, 'y', snakeHead.position.y * cellWH)\n  }\n}\n\nfunction initialView() {\n  bodyCells.forEach((el) => {\n    svg.append(el)\n  })\n  svg.append(geico)\n}\n\ndocument.addEventListener('keydown', (e) => {\n  const directions = {\n    ArrowRight: 1,\n    ArrowLeft: 3,\n    ArrowDown: 2,\n    ArrowUp: 4,\n    ' ': 'stop',\n  }\n\n  if (directions[e.key] !== undefined) {\n    direction = directions[e.key]\n  }\n})\n\nfunction gameOver() {\n  const gameOverEl = document.querySelector('.game-over')\n  gameOverEl.classList.add('active')\n}\n"]}