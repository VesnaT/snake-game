{"version":3,"sources":["src/js/main.js"],"names":["setAttributes","el","attributeAndValue","Object","entries","forEach","attribute","value","setAttribute","svgNS","gameContainer","document","querySelector","cellWH","gameW","gameH","svg","createElementNS","scoreContainer","scoreCount","direction","bodyCells","createBodyCell","geico","x","y","isGeico","cell","setAttributeNS","classList","add","position","createSvg","viewBox","width","height","append","initialView","gameInterval","setInterval","updatePosition","getXdif","getYdif","length","slice","snakeHead","snakeNeck","newCell","unshift","setTimeout","remove","innerHTML","Math","floor","random","clearInterval","gameOver","addEventListener","e","directions","ArrowRight","ArrowLeft","ArrowDown","ArrowUp","key","undefined","preventDefault","gameOverEl","contains","playAgain","passive"],"mappings":"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","file":"main.c48f6146.js","sourceRoot":"..","sourcesContent":["// import CircularSlider from './CircularSlider'\n\nfunction setAttributes(el, attributeAndValue) {\n  Object.entries(attributeAndValue).forEach(([attribute, value]) => {\n    el.setAttribute(attribute, value)\n  })\n}\nconst svgNS = 'http://www.w3.org/2000/svg'\nconst gameContainer = document.querySelector('.game-container')\nconst cellWH = 22\nconst gameW = 20\nconst gameH = 30\nconst svg = document.createElementNS(svgNS, 'svg')\nconst scoreContainer = document.querySelector('.score-counter')\nlet scoreCount = 0\nlet direction = 1\nlet bodyCells = [createBodyCell(), createBodyCell(1, 0)]\nlet geico = createBodyCell(3, 3, true)\n\nfunction createBodyCell(x = 0, y = 0, isGeico = false) {\n  const cell = document.createElementNS(svgNS, 'rect')\n  cell.setAttributeNS(null, 'x', x * cellWH)\n  cell.setAttributeNS(null, 'y', y * cellWH)\n  cell.setAttributeNS(null, 'height', cellWH)\n  cell.setAttributeNS(null, 'width', cellWH)\n  cell.setAttributeNS(null, 'opacity', 1)\n  cell.setAttributeNS(null, 'fill', isGeico ? 'black' : 'hotpink')\n\n  if (isGeico) {\n    cell.setAttributeNS(null, 'rx', `${cellWH / 2}`)\n    cell.setAttributeNS(null, 'ry', `${cellWH / 2}`)\n    cell.classList.add('geico')\n  } else {\n    cell.setAttributeNS(null, 'rx', '2')\n    cell.setAttributeNS(null, 'ry', '2')\n  }\n\n  cell.position = { x, y }\n\n  return cell\n}\n\nfunction createSvg() {\n  setAttributes(svg, {\n    viewBox: `0 0 ${gameW * cellWH} ${gameH * cellWH}`,\n    width: gameW * cellWH,\n    height: gameH * cellWH,\n  })\n\n  gameContainer.append(svg)\n}\n\ncreateSvg()\ninitialView()\n\nlet gameInterval = setInterval(function () {\n  updatePosition()\n}, 110)\n\nfunction getXdif() {\n  if (direction === 1) {\n    return 1\n  }\n  if (direction === 3) {\n    return -1\n  }\n  return 0\n}\nfunction getYdif() {\n  if (direction === 2) {\n    return 1\n  }\n  if (direction === 4) {\n    return -1\n  }\n  return 0\n}\n\nfunction updatePosition() {\n  bodyCells = [bodyCells[bodyCells.length - 1], ...bodyCells.slice(0, bodyCells.length - 1)]\n\n  const snakeHead = bodyCells[0]\n  const snakeNeck = bodyCells[1] || bodyCells[0]\n\n  snakeHead.position.x = snakeNeck.position.x + getXdif()\n  snakeHead.position.y = snakeNeck.position.y + getYdif()\n\n  if (snakeHead.position.x === geico.position.x && snakeHead.position.y === geico.position.y) {\n    const newCell = createBodyCell(geico.position.x + getXdif(), geico.position.y + getYdif())\n    svg.append(newCell)\n    bodyCells.unshift(newCell)\n    scoreCount += 10\n\n    scoreContainer.classList.add('active')\n\n    setTimeout(() => {\n      scoreContainer.classList.remove('active')\n    }, 300)\n    scoreContainer.innerHTML = `<span>Score: ${scoreCount}</span>`\n\n    geico.position = { x: Math.floor(Math.random(1) * gameW), y: Math.floor(Math.random(1) * gameH) }\n    geico.setAttributeNS(null, 'x', geico.position.x * cellWH)\n    geico.setAttributeNS(null, 'y', geico.position.y * cellWH)\n  }\n\n  if (\n    snakeHead.position.x < 0 ||\n    snakeHead.position.x > gameW - 1 ||\n    snakeHead.position.y < 0 ||\n    snakeHead.position.y > gameH - 1\n  ) {\n    clearInterval(gameInterval)\n    gameOver()\n  } else {\n    snakeHead.setAttributeNS(null, 'x', snakeHead.position.x * cellWH)\n    snakeHead.setAttributeNS(null, 'y', snakeHead.position.y * cellWH)\n  }\n}\n\nfunction initialView() {\n  bodyCells.forEach((el) => {\n    svg.append(el)\n  })\n  svg.append(geico)\n}\n\ndocument.addEventListener(\n  'keydown',\n  (e) => {\n    const directions = {\n      ArrowRight: 1,\n      ArrowLeft: 3,\n      ArrowDown: 2,\n      ArrowUp: 4,\n      ' ': 'stop',\n    }\n\n    if (directions[e.key] !== undefined) {\n      e.preventDefault()\n      direction = directions[e.key]\n    }\n\n    if (e.key === 'Enter' && gameOverEl.classList.contains('active')) {\n      playAgain()\n    }\n  },\n  { passive: false }\n)\n\nconst gameOverEl = document.querySelector('.game-over')\nfunction gameOver() {\n  gameOverEl.classList.add('active')\n  gameOverEl.querySelector('.score').innerHTML = `You scored ${scoreCount} points`\n}\n\ndocument.querySelector('.play-again').addEventListener('click', playAgain)\n\nfunction playAgain() {\n  gameOverEl.classList.remove('active')\n  scoreCount = 0\n  scoreContainer.innerHTML = `<span>Score: ${scoreCount}</span>`\n  bodyCells = [createBodyCell(), createBodyCell(1, 0)]\n  geico = createBodyCell(3, 3, true)\n  gameContainer.querySelector('svg').innerHTML = ''\n  direction = 1\n  initialView()\n  gameInterval = setInterval(function () {\n    updatePosition()\n  }, 110)\n}\n"]}